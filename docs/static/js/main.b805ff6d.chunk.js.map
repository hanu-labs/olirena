{"version":3,"sources":["assets/logo.jpg","views/ErrorPage.js","routes.js","views/Home.js","views/Turnos.js","views/Donde.js","components/LoadingScreen.js","components/Sidebar.js","App.js","serviceWorker.js","index.js","assets/olirena.jpg"],"names":["module","exports","ErrorPage","code","routes","path","exact","title","component","className","src","logo","alt","icon","url","map","borderColor","borderWidth","borderStyle","iconColor","iconSize","roundness","size","key","containerRef","useRef","useEffect","current","window","Calendly","initInlineWidget","parentElement","prefill","utm","ref","width","height","frameborder","scrolling","marginheight","marginwidth","LoadingScreen","style","justifyContent","alignItems","display","position","top","left","Sidebar","useState","visible","setVisible","location","useLocation","toggleSidebar","toggleButton","onClick","viewBox","y","join","to","route","pathname","AppWrapper","fallback","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b805ff6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e468079e.jpg\";","import React from 'react';\n\nconst ErrorPage = ({ code }) => {\n  return (\n    <div>\n      {code}\n   </div>\n  );\n};\n\nexport default ErrorPage;\n","import Home from './views/Home';\nimport Turnos from './views/Turnos';\nimport Donde from './views/Donde';\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    title: 'Inicio',\n    component: Home,\n  },\n  {\n    path: '/turnos',\n    title: 'Pedí tu turno',\n    component: Turnos,\n  },\n  {\n    path: '/donde',\n    title: 'Como llegar',\n    component: Donde,\n  }\n]\nexport default routes;\n","import React from 'react';\nimport logo from '../assets/olirena.jpg';\n\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\n\nconst Home = () => {\n  return (\n    <div className=\"View-Home\">\n      <img src={logo} className=\"Home-logo\" alt=\"logo\" />\n      <div className=\"subtitle\">\n        Peluquería Unisex\n      </div>\n      <div className=\"social-networks\">\n        {[\n          {\n            icon: 'instagram',\n            url: 'https://www.instagram.com/olirenapel/'\n          },\n          {\n            icon: 'facebook',\n            url: 'https://www.facebook.com/olirena.olirena'\n          }\n\n        ].map((icon) => (\n          <SocialMediaIconsReact\n            borderColor=\"rgba(0,0,0,0.25)\"\n            borderWidth=\"2\"\n            borderStyle=\"solid\"\n            iconColor=\"rgba(255,255,255,1)\"\n            iconSize=\"5\"\n            roundness=\"20%\"\n            size=\"40\"\n            key={icon.icon}\n            {...icon}\n          />\n        ))}\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useRef, useEffect } from 'react';\n\nconst Home = () => {\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n    window.Calendly.initInlineWidget({\n      url: 'https://calendly.com/olirena', //?hide_landing_page_details=1&hide_event_type_details=1',\n      parentElement: containerRef.current,\n      prefill: {},\n      utm: {}\n     });\n  }, [containerRef.current]);\n\n\n  return (\n    <div className=\"section\">\n      {/* <h2>Turnos</h2> */}\n      <div className=\"content\">\n        <div className=\"calendly-container\" ref={containerRef} />\n      </div>\n    </div>\n    // {/* <iframe\n    //   className=\"calendly\"\n    //   src=\"https://calendly.com/olirena\"\n    // /> */}\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Donde = () => {\n  return (\n    <iframe\n      title=\"Ubicación de Olirena\"\n      width=\"100%\"\n      height=\"100%\"\n      src=\"https://maps.google.com/maps?q=olirena&t=&z=17&ie=UTF8&iwloc=&output=embed\"\n      frameborder=\"0\"\n      scrolling=\"no\"\n      marginheight=\"0\"\n      marginwidth=\"0\" />\n  )\n}\n\nexport default Donde;\n","import React from 'react';\nimport logo from '../assets/logo.jpg';\n\nconst LoadingScreen = () => (\n  <div\n    style={{\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      width: '100vw',\n      height: '100vh'\n    }}\n  >\n    <img style={{ height: '75px' }} src={logo} alt=\"Loading...\" />\n  </div>\n);\n\nexport default LoadingScreen;\n","import React, { useState, Fragment } from 'react';\nimport { useLocation } from 'react-router';\nimport { Drawer } from '@material-ui/core';\nimport logo from '../assets/olirena.jpg';\nimport { Link } from 'react-router-dom';\n\nimport routes from '../routes';\n\n\nconst Sidebar = () => {\n  const [visible, setVisible] = useState(false);\n  const location = useLocation();\n  \n  const toggleSidebar = () => setVisible(!visible);\n\n  const toggleButton = (\n    <div className=\"toggle-sidebar\" onClick={toggleSidebar}>\n      <svg viewBox=\"0 0 100 80\" width=\"20\" height=\"20\">\n        <rect width=\"100\" height=\"20\"></rect>\n        <rect y=\"30\" width=\"100\" height=\"20\"></rect>\n        <rect y=\"60\" width=\"100\" height=\"20\"></rect>\n      </svg>\n    </div>\n  )\n  return (\n    <Fragment>\n      <div className=\"sidebar-placeholder\">\n        {toggleButton}\n      </div>\n      <div className={[\n        'sidebar',\n        visible ? 'visible' : '',\n      ].join(' ')}>\n        {toggleButton}\n        <Link to={'/'}>\n          <img className=\"App-logo\" src={logo} />\n          <a>\n            Peluquería Unisex\n          </a>\n        </Link>\n        <nav>\n          {routes.map((route) => (\n            <div\n              key={route.path}\n              className={route.path === location.pathname ? 'active' : ''}>\n              <Link to={route.path} onClick={toggleSidebar}>\n                {route.title}\n              </Link>\n            </div>\n          ))}\n        </nav>\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default Sidebar;\n","import React, { Suspense } from 'react';\nimport './App.scss';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport ErrorPage from './views/ErrorPage';\nimport routes from './routes';\nimport LoadingScreen from './components/LoadingScreen';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\n\nconst AppWrapper = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Sidebar />\n        <div className=\"App-content\">\n          <Suspense fallback={<LoadingScreen />}>\n            <Switch>\n              {routes.map((route) => (\n                <Route\n                  key={route.path}\n                  {...route}\n                />\n              ))}\n              <Route\n                component={() => <ErrorPage code={404} />}\n              />\n            </Switch>\n          </Suspense>\n        </div>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default AppWrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/olirena.70212b4b.jpg\";"],"sourceRoot":""}